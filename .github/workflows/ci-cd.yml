name: Staff Management CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore staff-management.sln
    
    - name: Build solution
      run: dotnet build staff-management.sln --no-restore
    
    - name: Run tests
      run: dotnet test StaffManagement.Tests/StaffManagement.Tests.csproj --no-build --verbosity normal

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: StaffManagement.Web/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: StaffManagement.Web
    
    - name: Run tests
      run: npm test -- --coverage --passWithNoTests --watchAll=false
      working-directory: StaffManagement.Web
      env:
        CI: true
    
    - name: Build frontend
      run: npm run build
      working-directory: StaffManagement.Web

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: StaffManagement.E2E/package.json
    
    - name: Install E2E dependencies
      run: npm ci
      working-directory: StaffManagement.E2E
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      working-directory: StaffManagement.E2E
    
    - name: Build solution
      run: dotnet build staff-management.sln
    
    - name: Start backend
      run: |
        nohup dotnet run --project StaffManagement.Api/StaffManagement.Api.csproj --urls "http://localhost:5009" &
        sleep 15
        echo "Backend started"
    
    - name: Install frontend dependencies
      run: npm ci
      working-directory: StaffManagement.Web
    
    - name: Start frontend
      run: |
        nohup npm start &
        sleep 15
        echo "Frontend started"
      working-directory: StaffManagement.Web
      env:
        REACT_APP_API_BASE_URL: http://localhost:5009
    
    - name: Wait for services
      run: |
        # Wait for backend
        timeout 60 bash -c 'until curl -f http://localhost:5009/health || curl -f http://localhost:5009/api/staff; do sleep 2; done'
        # Wait for frontend
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
    
    - name: Run Playwright tests
      run: npx playwright test
      working-directory: StaffManagement.E2E
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: StaffManagement.E2E/playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: StaffManagement.Web/package-lock.json
    
    - name: Build backend for deployment
      run: dotnet publish StaffManagement.Api/StaffManagement.Api.csproj -c Release -o ./publish/backend
    
    - name: Build frontend for deployment
      run: |
        npm ci
        npm run build
      working-directory: StaffManagement.Web
      env:
        REACT_APP_API_BASE_URL: /api
    
    - name: Create deployment artifact
      run: |
        mkdir -p deployment
        cp -r publish/backend deployment/
        cp -r StaffManagement.Web/build deployment/frontend
        
        # Create a simple deployment info file
        echo "Deployment created at: $(date)" > deployment/deployment-info.txt
        echo "Commit: ${{ github.sha }}" >> deployment/deployment-info.txt
        echo "Branch: ${{ github.ref_name }}" >> deployment/deployment-info.txt
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-files
        path: deployment/
        retention-days: 7
